# Generated by Django 4.2.16 on 2025-05-28 13:24

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('georegion', '0011_georegion_invalid_on'),
        ('publicbody', '0050_alter_publicbody_email'),
        ('froide_evidencecollection', '0003_alter_evidence_source'),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'affiliation',
                'verbose_name_plural': 'affiliations',
            },
        ),
        migrations.CreateModel(
            name='AttributionBasis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'attribution basis',
                'verbose_name_plural': 'attribution bases',
            },
        ),
        migrations.CreateModel(
            name='DistributionChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'distribution channel',
                'verbose_name_plural': 'distribution channels',
            },
        ),
        migrations.CreateModel(
            name='FdgoFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'FDGO feature',
                'verbose_name_plural': 'FDGO features',
            },
        ),
        migrations.CreateModel(
            name='PersonOrOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('special_regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='special regions')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('review_comment', models.TextField(blank=True, default='', verbose_name='review comment')),
            ],
            options={
                'verbose_name': 'person/organization',
                'verbose_name_plural': 'persons/organizations',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='SpreadLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'spread level',
                'verbose_name_plural': 'spread levels',
            },
        ),
        migrations.AlterModelOptions(
            name='evidencetype',
            options={'verbose_name': 'evidence type', 'verbose_name_plural': 'evidence types'},
        ),
        migrations.AlterModelOptions(
            name='institution',
            options={'verbose_name': 'institution/party level', 'verbose_name_plural': 'institutions/party levels'},
        ),
        migrations.AlterField(
            model_name='evidencetype',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='name'),
        ),
        migrations.CreateModel(
            name='SourceNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('reference_value', models.CharField(max_length=255, unique=True, verbose_name='reference value')),
                ('url', models.URLField(max_length=500, verbose_name='URL')),
                ('file_reference', models.CharField(blank=True, default='', max_length=255, verbose_name='file reference')),
                ('document_number', models.CharField(blank=True, default='', max_length=255, verbose_name='document number')),
                ('review_comment', models.TextField(blank=True, default='', verbose_name='review comment')),
                ('is_on_record', models.BooleanField(default=False, verbose_name='is on record')),
                ('attribution_bases', models.ManyToManyField(blank=True, related_name='sources', to='froide_evidencecollection.attributionbasis', verbose_name='attribution bases')),
                ('persons_or_organizations', models.ManyToManyField(related_name='sources', to='froide_evidencecollection.personororganization', verbose_name='persons/organizations')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_sources', to='publicbody.publicbody', verbose_name='recorded by')),
            ],
            options={
                'verbose_name': 'source',
                'verbose_name_plural': 'sources',
            },
        ),
        migrations.AddField(
            model_name='personororganization',
            name='affiliations',
            field=models.ManyToManyField(related_name='persons', through='froide_evidencecollection.Affiliation', to='froide_evidencecollection.institution', verbose_name='affiliations'),
        ),
        migrations.AddField(
            model_name='personororganization',
            name='regions',
            field=models.ManyToManyField(to='georegion.georegion', verbose_name='regions'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('members', models.ManyToManyField(related_name='groups', to='froide_evidencecollection.personororganization', verbose_name='members')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
        ),
        migrations.CreateModel(
            name='EvidenceNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('description', models.TextField(verbose_name='description')),
                ('date', models.DateField(blank=True, null=True, verbose_name='date of statement/action')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('requires_additional_review', models.BooleanField(default=False, verbose_name='requires additional review')),
                ('submission_comment', models.TextField(blank=True, default='', verbose_name='submission comment')),
                ('review_comment', models.TextField(blank=True, default='', verbose_name='review comment')),
                ('distribution_channels', models.ManyToManyField(blank=True, to='froide_evidencecollection.distributionchannel', verbose_name='distribution channels')),
                ('fdgo_features', models.ManyToManyField(blank=True, to='froide_evidencecollection.fdgofeature', verbose_name='FDGO features')),
                ('sources', models.ManyToManyField(to='froide_evidencecollection.sourcenew', verbose_name='sources')),
                ('spread_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='froide_evidencecollection.spreadlevel', verbose_name='spread level')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='froide_evidencecollection.evidencetype', verbose_name='evidence type')),
            ],
            options={
                'verbose_name': 'evidence',
                'verbose_name_plural': 'evidence',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100, unique=True, verbose_name='external ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('file', models.FileField(upload_to='attachments', verbose_name='file')),
                ('mimetype', models.CharField(blank=True, max_length=100, verbose_name='mimetype')),
                ('size', models.PositiveIntegerField(blank=True, null=True, verbose_name='size')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='width')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='froide_evidencecollection.sourcenew', verbose_name='source')),
            ],
            options={
                'verbose_name': 'attachment',
                'verbose_name_plural': 'attachments',
            },
        ),
        migrations.AddField(
            model_name='affiliation',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='froide_evidencecollection.institution', verbose_name='institution/party level'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='person_or_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='froide_evidencecollection.personororganization', verbose_name='person/organization'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='froide_evidencecollection.role', verbose_name='role'),
        ),
        migrations.AlterUniqueTogether(
            name='affiliation',
            unique_together={('person_or_organization', 'institution', 'role')},
        ),
    ]
