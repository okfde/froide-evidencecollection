# Generated by Django 5.2.1 on 2025-08-18 14:41

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('froide_evidencecollection', '0009_alter_attachment_file'),
        ('georegion', '0013_alter_georegion_region_identifier'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('actor_type', models.CharField(blank=True, choices=[('P', 'person'), ('O', 'organization')], max_length=1, verbose_name='actor type')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('also_known_as', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='also known as')),
                ('wikidata_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Wikidata ID')),
            ],
            options={
                'verbose_name': 'actor',
                'verbose_name_plural': 'actors',
            },
        ),
        migrations.CreateModel(
            name='AttributionProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'attribution problem',
                'verbose_name_plural': 'attribution problems',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
            ],
            options={
                'verbose_name': 'collection',
                'verbose_name_plural': 'collections',
            },
        ),
        migrations.CreateModel(
            name='InstitutionalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'institutional level',
                'verbose_name_plural': 'institutional levels',
            },
        ),
        migrations.CreateModel(
            name='OrganizationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'organization status',
                'verbose_name_plural': 'organization statuses',
            },
        ),
        migrations.CreateModel(
            name='PersonStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'person status',
                'verbose_name_plural': 'person statuses',
            },
        ),
        migrations.CreateModel(
            name='EvidenceNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('citation', models.TextField(default='', verbose_name='citation')),
                ('description', models.TextField(default='', verbose_name='description')),
                ('event_date', models.DateField(blank=True, null=True, verbose_name='event date')),
                ('publishing_date', models.DateField(blank=True, null=True, verbose_name='publishing date')),
                ('documentation_date', models.DateField(blank=True, null=True, verbose_name='documentation date')),
                ('reference_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='reference URL')),
                ('reference_info', models.TextField(blank=True, default='', verbose_name='reference (additional information)')),
                ('primary_source_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='primary source URL')),
                ('primary_source_info', models.TextField(blank=True, default='', verbose_name='primary source (additional information)')),
                ('attribution_justification', models.TextField(blank=True, default='', verbose_name='attribution justification')),
                ('comment', models.TextField(blank=True, default='', verbose_name='comment')),
                ('legal_assessment', models.PositiveIntegerField(blank=True, choices=[(1, '⭐'), (2, '⭐⭐'), (3, '⭐⭐⭐'), (4, '⭐⭐⭐⭐'), (5, '⭐⭐⭐⭐⭐')], null=True, verbose_name='legal assessment')),
                ('attribution_evidence', models.ManyToManyField(blank=True, to='froide_evidencecollection.evidencenew', verbose_name='attribution evidence')),
                ('attribution_problems', models.ManyToManyField(blank=True, to='froide_evidencecollection.attributionproblem', verbose_name='attribution problems')),
                ('collections', models.ManyToManyField(blank=True, to='froide_evidencecollection.collection', verbose_name='collections')),
                ('evidence_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='froide_evidencecollection.evidencetype', verbose_name='evidence type')),
                ('originators', models.ManyToManyField(related_name='originated_evidence', to='froide_evidencecollection.actor', verbose_name='originators')),
                ('related_actors', models.ManyToManyField(related_name='related_evidence', to='froide_evidencecollection.actor', verbose_name='related actors')),
            ],
            options={
                'verbose_name': 'piece of evidence',
                'verbose_name_plural': 'pieces of evidence',
            },
        ),
        migrations.CreateModel(
            name='AttachmentNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100, unique=True, verbose_name='external ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('file', models.FileField(max_length=255, upload_to='attachments', verbose_name='file')),
                ('mimetype', models.CharField(blank=True, max_length=100, verbose_name='mimetype')),
                ('size', models.PositiveIntegerField(blank=True, null=True, verbose_name='size')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='width')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('evidence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='froide_evidencecollection.evidencenew', verbose_name='evidence')),
            ],
            options={
                'verbose_name': 'attachment',
                'verbose_name_plural': 'attachments',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='froide_evidencecollection.actor')),
                ('organization_name', models.CharField(max_length=255, verbose_name='organization name')),
                ('special_regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='special regions')),
                ('institutional_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='froide_evidencecollection.institutionallevel', verbose_name='institutional level')),
                ('regions', models.ManyToManyField(to='georegion.georegion', verbose_name='regions')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='froide_evidencecollection.organizationstatus')),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
            },
            bases=('froide_evidencecollection.actor',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='froide_evidencecollection.actor')),
                ('first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('title', models.CharField(blank=True, max_length=20, null=True, verbose_name='title')),
                ('aw_politician_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='abgeordnetenwatch.de politician ID')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='froide_evidencecollection.personstatus')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'persons',
            },
            bases=('froide_evidencecollection.actor',),
        ),
        migrations.CreateModel(
            name='AffiliationNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='external ID')),
                ('start_date_string', models.CharField(blank=True, max_length=10, null=True, verbose_name='start date (string)')),
                ('end_date_string', models.CharField(blank=True, max_length=10, null=True, verbose_name='end date (string)')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='froide_evidencecollection.role', verbose_name='role')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='froide_evidencecollection.organization', verbose_name='organization')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliations', to='froide_evidencecollection.person', verbose_name='person')),
            ],
            options={
                'verbose_name': 'affiliation',
                'verbose_name_plural': 'affiliations',
            },
        ),
    ]
